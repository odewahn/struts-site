Drafts of press releases to share with the ASF Public Relations Committee for release on 13 Dec 2005.

----

Apache Struts releases Struts 1.3.0 as the "Action Framework" 

13 Dec 2005 - The Apache Struts flagship product, the leading web application framework for Java, is now known as the 
"Struts Action Framework". 

To make the framework easier to maintain, Apache Struts subdivided the original monolithic distribution into several subprojects. Each subproject has its own website, documentation, and release cycle, and may be downloaded separately. For consistency, the original core framework component also has its own name now: "Struts Action Framework". The JARs and external dependencies for the extensions to Struts Action Framework are being bundled into a convenient distribution known as the "Struts Action Framework Library".

The Struts Action Framework 1.3.0 release includes several exciting new features, including: 

* Composable Request Processor
* ActionDynaForm interfaces
* Arbitrary configuration properties
* Catalog and Command Elements
* Enhanced Global Exception Handlers
* Extends attribute for XML configurations
* "isCommitted" Exception Handling
* Postback Actions
* Wildcard ActionConfig properties

The key change in this release is the "composable request processor". The request processor is the framework's "kernal". The request processor methods are now command objects in a flexible chain of commands. Rather than subclassing a monolithic object, developers can now just replace commands with their own implementations. Commands can also be inserted or removed, if needed, to extend or streamline the request processing gauntlet, to better meet the needs of different kinds of applications.

The Struts Action Framework 1.3.0 release, and other milestones on the Apache Struts roadmap, are being discussed at ApacheCon today in a talk, entitled "Struts 2006: An Embarrassment of Riches".

For more about Struts Action Framework, visit the framework's Website [http://struts.apache.org/struts-action/].

----

Apache Struts offers "Shale" for JSF

13 Dec 2005 - To give JavaServer Faces developers a head start on building scalable web applications for the enterprise, Apache Struts now offers the Shale Framework. Like the original "Struts Action Framework", Shale provides developers with a front controller, and several other components, to provide the "invisible underpinnings that hold an application together".

"When JavaServer Faces arrived," explains the Struts website, "our development community chose to 'make new friends but keep the old'. Some of us want (or need) to stick with the original request-based framework. Others are ready to switch to an component-based framework that builds on JavaServer Faces. We offer both frameworks because we have volunteers to create and maintain both frameworks."

Shale is based on the recenty standardized JavaServer Faces APIs, and focuses on adding value, rather than redundantly implementing features that JSF already provides. Shale will run on any compliant JSF implementation, including the one being developed by the Apache MyFaces project. It also includes many features that Struts users appreciate, such as supporting client side validation and the Tiles framework.

Struts Shale is being discussed by Craig McClanahan in a talk at ApacheCon today, entitled "Shale: The Next Struts?".

For more about Shale, visit the Struts Shale website [http://struts.apache.org/struts-shale/].

----

Apache Struts to release "standalone" Tiles 

13 Dec 2005 - Apache Struts introduced Tiles as a integral component of its Struts 1.1 release in June 2003. Since then, several other projects have been using Tiles, even though it was embedded in the Struts JAR. Soon, it will be much easier to use Tiles with products like Jakarta Velocity, Apache MyFaces, and Struts Shale. 

Tiles is a templating framework that can be used to create a common look and feel for a web site or application and to create reusable view components. A key aspect of Tiles is that it can be configured from a XML configuration file. A Tile definition can "extend" another definition, giving the component an object-oriented feel. Tile developers can create a base Tile (or screen layout), and then indicate only how other Tiles differ from the base. Changes made to a base Tile "cascade" to Tiles that extend that base. Significant changes can be made to the layout of a website just by changing a single Tile definition.

For more about Tiles, visit the Struts Tiles website [http://struts.apache.org/struts-tiles/].

----
----
